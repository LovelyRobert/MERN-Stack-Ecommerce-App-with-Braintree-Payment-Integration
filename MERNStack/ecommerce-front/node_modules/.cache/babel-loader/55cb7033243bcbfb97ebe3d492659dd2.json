{"ast":null,"code":"var _jsxFileName = \"/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Checkout.js\";\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { Link } from 'react-router-dom';\nimport { getProducts, getBraintreeClientToken, processPayment } from './apiCore';\nimport { isAuthenticated } from '../auth';\nimport { emptyCart } from './cartHelpers';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({\n  products\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        setData({ ...data,\n          error: data.error\n        });\n      } else {\n        console.log(data);\n        setData({\n          clientToken: data.clientToken\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const buy = () => {\n    setData({\n      loading: true\n    }); // send the nonce to your server\n    // nonce = data.instance.requestPaymentMethod()\n\n    let nonce;\n    let getNonce = data.instance.requestPaymentMethod().then(data => {\n      // console.log(data);\n      nonce = data.nonce; // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n      // and also total to be charged\n      // console.log(\n      //     \"send nonce and total to process: \",\n      //     nonce,\n      //     getTotal(products)\n      // );\n\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getTotal(products)\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        //console.log(response);\n        setData({ ...data,\n          success: response.success\n        });\n        emptyCart(() => {\n          setRun(!run); // run useEffect in parent Cart\n\n          console.log('payment success and empty cart');\n        }); // empty cart\n        // create order\n      }).catch(error => {\n        console.log(error);\n        setData({\n          loading: false\n        });\n      });\n    }).catch(error => {\n      // console.log(\"dropin error: \", error);\n      setData({ ...data,\n        error: error.message\n      });\n    });\n  };\n\n  const showSuccess = success => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Thanks! Your payment was successful!\");\n\n  const showError = error => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, error);\n\n  const showDropIn = () => /*#__PURE__*/React.createElement(\"div\", {\n    onBlur: () => setData({ ...data,\n      error: ''\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, data.clientToken !== null && products.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropIn, {\n    options: {\n      authorization: data.clientToken\n    },\n    onInstance: instance => data.instance = instance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: buy,\n    className: \"btn btn-success btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Pay\")) : null);\n\n  const getTotal = () => {\n    return products.reduce((currentValue, nextValue) => {\n      return currentValue + nextValue.count * nextValue.price;\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticated() ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, showDropIn()) : /*#__PURE__*/React.createElement(Link, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"Sign in to checkout\"));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 16\n    }\n  }, \"Total: $\", getTotal(), \" \"), showSuccess(data.success), showError(data.error), showCheckout());\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Checkout.js"],"names":["React","useState","useEffect","Card","Link","getProducts","getBraintreeClientToken","processPayment","isAuthenticated","emptyCart","DropIn","Checkout","products","data","setData","loading","success","clientToken","error","instance","address","userId","user","_id","token","getToken","then","console","log","buy","nonce","getNonce","requestPaymentMethod","paymentData","paymentMethodNonce","amount","getTotal","response","setRun","run","catch","message","showSuccess","display","showError","showDropIn","length","authorization","reduce","currentValue","nextValue","count","price","showCheckout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { Link } from 'react-router-dom';\nimport { getProducts, getBraintreeClientToken,processPayment } from './apiCore';\nimport { isAuthenticated } from '../auth';\nimport { emptyCart } from './cartHelpers';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({products}) => {\n\n  const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n                setData({ ...data, error: data.error });\n            } else {\n                console.log(data);\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n  \n    const buy = () => {\n        setData({ loading: true });\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod()\n        let nonce;\n        let getNonce = data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                // console.log(\n                //     \"send nonce and total to process: \",\n                //     nonce,\n                //     getTotal(products)\n                // );\n                const paymentData = {\n                    paymentMethodNonce: nonce,\n                    amount: getTotal(products)\n                };\n\n                processPayment(userId, token, paymentData)\n                    .then(response => {\n                        //console.log(response);\n                        setData({...data,success: response.success});\n                        emptyCart(() => {\n                                    setRun(!run); // run useEffect in parent Cart\n                                    console.log('payment success and empty cart');\n                                });\n                        // empty cart\n                        // create order\n\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setData({ loading: false });\n                    });\n            })\n            .catch(error => {\n                // console.log(\"dropin error: \", error);\n                setData({ ...data, error: error.message });\n            });\n    };\n\n    const showSuccess = success => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            Thanks! Your payment was successful!\n        </div>\n    )\n\n\n   const showError = error => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    ); \n    \n\n   const showDropIn = () => (\n        <div onBlur={() => setData({ ...data, error: '' })} >\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                \n                    <DropIn\n                        options={{\n                            authorization: data.clientToken\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\n                        Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n\t const getTotal = () => {\n\t \t return products.reduce((currentValue, nextValue) => {\n\t \t \treturn currentValue + nextValue.count * nextValue.price;\n\t \t },0);\n\t }\n\n\t const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    }\n\n      return (\n           \n           <div>\n               <h2>Total: ${getTotal()} </h2>\n               {showSuccess(data.success)}\n               {showError(data.error)}\n               {showCheckout()}\n           </div>\n      \t)\n \n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}