{"ast":null,"code":"var _jsxFileName = \"/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Checkout.js\";\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { Link } from 'react-router-dom';\nimport { getProducts, getBraintreeClientToken } from './cartHelpers';\nimport { isAuthenticated } from '../auth';\n\nconst Checkout = ({\n  products\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  });\n\n  const getTotal = () => {\n    return products.reduce((currentValue, nextValue) => {\n      return currentValue + nextValue.count * nextValue.price;\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticated() ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Checkout\") : /*#__PURE__*/React.createElement(Link, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Sign in to checkout\"));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }\n  }, \"Total: $\", getTotal(), \" \"), showCheckout());\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Checkout.js"],"names":["React","useState","useEffect","Card","Link","getProducts","getBraintreeClientToken","isAuthenticated","Checkout","products","data","setData","loading","success","clientToken","error","instance","address","getTotal","reduce","currentValue","nextValue","count","price","showCheckout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,uBAAtB,QAAqD,eAArD;AACA,SAASC,eAAT,QAAgC,SAAhC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAE/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC3BW,IAAAA,OAAO,EAAE,KADkB;AAE3BC,IAAAA,OAAO,EAAE,KAFkB;AAG3BC,IAAAA,WAAW,EAAE,IAHc;AAI3BC,IAAAA,KAAK,EAAE,EAJoB;AAK3BC,IAAAA,QAAQ,EAAE,EALiB;AAM3BC,IAAAA,OAAO,EAAE;AANkB,GAAD,CAAhC;;AAUA,QAAMC,QAAQ,GAAG,MAAM;AACrB,WAAOT,QAAQ,CAACU,MAAT,CAAgB,CAACC,YAAD,EAAeC,SAAf,KAA6B;AACnD,aAAOD,YAAY,GAAGC,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAACE,KAAlD;AACA,KAFM,EAEL,CAFK,CAAP;AAGD,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACrB,WAAOjB,eAAe,kBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADkB,gBAGlB,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CAHJ;AAOH,GARH;;AAUI,sBAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaW,QAAQ,EAArB,MADJ,EAEKM,YAAY,EAFjB,CAFL;AAQL,CApCD;;AAsCA,eAAehB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { Link } from 'react-router-dom';\nimport { getProducts, getBraintreeClientToken } from './cartHelpers';\nimport { isAuthenticated } from '../auth';\n\nconst Checkout = ({products}) => {\n\n  const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\n\n\t const getTotal = () => {\n\t \t return products.reduce((currentValue, nextValue) => {\n\t \t \treturn currentValue + nextValue.count * nextValue.price;\n\t \t },0);\n\t }\n\n\t const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>Checkout</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    }\n\n      return (\n           \n           <div>\n               <h2>Total: ${getTotal()} </h2>\n               {showCheckout()}\n           </div>\n      \t)\n \n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}