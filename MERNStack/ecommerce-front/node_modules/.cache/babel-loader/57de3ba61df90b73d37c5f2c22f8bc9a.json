{"ast":null,"code":"var _jsxFileName = \"/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Product.js\";\nimport React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { read, listRelated } from './apiCore';\nimport Card from './Card';\n\nconst Product = props => {\n  const [product, setProduct] = useState({}); //const [relatedProduct, setRelatedProduct] = useState([]);\n\n  const [error, setError] = useState(false);\n\n  const loadSingleProduct = productId => {\n    read(productId).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProduct(data); // fetch related products\n        // listRelated(data._id).then(data => {\n        //     if (data.error) {\n        //         setError(data.error);\n        //     } else {\n        //         setRelatedProduct(data);\n        //     }\n        // });\n      }\n    });\n  };\n\n  useEffect(() => {\n    const productId = props.match.params.productId;\n    loadSingleProduct(productId);\n  }, []);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: product && product.name,\n    description: product && product.description && product.description.substring(0, 100),\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }, product && product.description && /*#__PURE__*/React.createElement(Card, {\n    product: product,\n    showViewProductButton: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 48\n    }\n  })));\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Product.js"],"names":["React","useState","useEffect","Layout","read","listRelated","Card","Product","props","product","setProduct","error","setError","loadSingleProduct","productId","then","data","match","params","name","description","substring"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAiC,WAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC,CADqB,CAErB;;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMY,iBAAiB,GAAGC,SAAS,IAAI;AACnCV,IAAAA,IAAI,CAACU,SAAD,CAAJ,CAAgBC,IAAhB,CAAqBC,IAAI,IAAI;AACzB,UAAIA,IAAI,CAACL,KAAT,EAAgB;AACZC,QAAAA,QAAQ,CAACI,IAAI,CAACL,KAAN,CAAR;AACH,OAFD,MAEO;AACHD,QAAAA,UAAU,CAACM,IAAD,CAAV,CADG,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ,KAdD;AAeH,GAhBD;;AAkBAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,SAAS,GAAGN,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBJ,SAArC;AACAD,IAAAA,iBAAiB,CAACC,SAAD,CAAjB;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEL,OAAO,IAAIA,OAAO,CAACU,IAD9B;AAEI,IAAA,WAAW,EAAEV,OAAO,IAAIA,OAAO,CAACW,WAAnB,IAAkCX,OAAO,CAACW,WAAR,CAAoBC,SAApB,CAA8B,CAA9B,EAAiC,GAAjC,CAFnD;AAGI,IAAA,SAAS,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKG;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEZ,OAAO,IAAIA,OAAO,CAACW,WAAnB,iBAAkC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEX,OAAf;AAAwB,IAAA,qBAAqB,EAAI,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpC,CALH,CADJ;AAWH,CAvCD;;AAyCA,eAAeF,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { read, listRelated} from './apiCore';\nimport Card from './Card';\n\nconst Product = props => {\n    const [product, setProduct] = useState({});\n    //const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProduct(data);\n                // fetch related products\n                // listRelated(data._id).then(data => {\n                //     if (data.error) {\n                //         setError(data.error);\n                //     } else {\n                //         setRelatedProduct(data);\n                //     }\n                // });\n            }\n        });\n    };\n\n    useEffect(() => {\n        const productId = props.match.params.productId;\n        loadSingleProduct(productId);\n    }, []);\n\n    return (\n        <Layout\n            title={product && product.name}\n            description={product && product.description && product.description.substring(0, 100)}\n            className=\"container-fluid\"\n        >\n           <div className = \"row\">\n            {product && product.description && <Card product={product} showViewProductButton = {false}/>}\n           </div>\n        </Layout>\n    );\n};\n\nexport default Product;"]},"metadata":{},"sourceType":"module"}