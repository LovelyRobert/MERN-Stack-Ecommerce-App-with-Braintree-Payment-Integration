{"ast":null,"code":"var _jsxFileName = \"/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Checkbox.js\";\nimport React, { useState } from \"react\";\n\nconst Checkbox = ({\n  categories\n}) => {\n  const [checked, setCheked] = useState([]);\n\n  const handleToggle = c => () => {\n    // return the first index or -1\n    const currentCategoryId = checked.indexOf(c);\n    const newCheckedCategoryId = [...checked]; // if currently checked was not already in checked state > push\n    // else pull/take off\n\n    if (currentCategoryId === -1) {\n      newCheckedCategoryId.push(c);\n    } else {\n      //remove that one item\n      newCheckedCategoryId.splice(currentCategoryId, 1);\n    } // console.log(newCheckedCategoryId);\n\n\n    setCheked(newCheckedCategoryId); //handleFilters(newCheckedCategoryId);\n  };\n\n  return categories.map((c, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, c.name)));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Checkbox.js"],"names":["React","useState","Checkbox","categories","checked","setCheked","handleToggle","c","currentCategoryId","indexOf","newCheckedCategoryId","push","splice","map","i","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAEhC,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBJ,QAAQ,CAAC,EAAD,CAArC;;AAED,QAAMK,YAAY,GAAGC,CAAC,IAAI,MAAM;AAC5B;AACA,UAAMC,iBAAiB,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,CAAhB,CAA1B;AACA,UAAMG,oBAAoB,GAAG,CAAC,GAAGN,OAAJ,CAA7B,CAH4B,CAI5B;AACA;;AACA,QAAII,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC1BE,MAAAA,oBAAoB,CAACC,IAArB,CAA0BJ,CAA1B;AACH,KAFD,MAEO;AACH;AACAG,MAAAA,oBAAoB,CAACE,MAArB,CAA4BJ,iBAA5B,EAA+C,CAA/C;AACH,KAX2B,CAY5B;;;AACAH,IAAAA,SAAS,CAACK,oBAAD,CAAT,CAb4B,CAc5B;AACH,GAfD;;AAiBA,SAAOP,UAAU,CAACU,GAAX,CAAe,CAACN,CAAD,EAAIO,CAAJ,kBAClB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAC,kBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCP,CAAC,CAACQ,IAAvC,CALJ,CADG,CAAP;AASH,CA9BD;;AAgCA,eAAeb,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Checkbox = ({ categories }) => {\n\n     const [checked, setCheked] = useState([]);\n\n    const handleToggle = c => () => {\n        // return the first index or -1\n        const currentCategoryId = checked.indexOf(c);\n        const newCheckedCategoryId = [...checked];\n        // if currently checked was not already in checked state > push\n        // else pull/take off\n        if (currentCategoryId === -1) {\n            newCheckedCategoryId.push(c);\n        } else {\n            //remove that one item\n            newCheckedCategoryId.splice(currentCategoryId, 1);\n        }\n        // console.log(newCheckedCategoryId);\n        setCheked(newCheckedCategoryId);\n        //handleFilters(newCheckedCategoryId);\n    };\n\n    return categories.map((c, i) => (\n        <li key={i} className=\"list-unstyled\">\n            <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n            />\n            <label className=\"form-check-label\">{c.name}</label>\n        </li>\n    ));\n};\n\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}