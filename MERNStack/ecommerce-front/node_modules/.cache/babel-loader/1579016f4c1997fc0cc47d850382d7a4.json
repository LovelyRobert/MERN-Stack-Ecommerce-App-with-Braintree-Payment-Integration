{"ast":null,"code":"var _jsxFileName = \"/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Product.js\";\nimport React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { read } from './apiCore';\nimport Card from './Card';\n\nconst Product = props => {\n  // const [product, setProduct] = useState({});\n  // const [relatedProduct, setRelatedProduct] = useState([]);\n  // const [error, setError] = useState(false);\n  // const loadSingleProduct = productId => {\n  //     read(productId).then(data => {\n  //         if (data.error) {\n  //             setError(data.error);\n  //         } else {\n  //             setProduct(data);\n  //             // fetch related products\n  //             listRelated(data._id).then(data => {\n  //                 if (data.error) {\n  //                     setError(data.error);\n  //                 } else {\n  //                     setRelatedProduct(data);\n  //                 }\n  //             });\n  //         }\n  //     });\n  // };\n  // useEffect(() => {\n  //     const productId = props.match.params.productId;\n  //     loadSingleProduct(productId);\n  // }, [props]);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: product && product.name,\n    description: product && product.description && product.description.substring(0, 100),\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Product.js"],"names":["React","useState","useEffect","Layout","read","Card","Product","props","product","name","description","substring"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,QAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,sBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEC,OAAO,IAAIA,OAAO,CAACC,IAD9B;AAEI,IAAA,WAAW,EAAED,OAAO,IAAIA,OAAO,CAACE,WAAnB,IAAkCF,OAAO,CAACE,WAAR,CAAoBC,SAApB,CAA8B,CAA9B,EAAiC,GAAjC,CAFnD;AAGI,IAAA,SAAS,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AASH,CArCD;;AAuCA,eAAeL,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { read} from './apiCore';\nimport Card from './Card';\n\nconst Product = props => {\n    // const [product, setProduct] = useState({});\n    // const [relatedProduct, setRelatedProduct] = useState([]);\n    // const [error, setError] = useState(false);\n\n    // const loadSingleProduct = productId => {\n    //     read(productId).then(data => {\n    //         if (data.error) {\n    //             setError(data.error);\n    //         } else {\n    //             setProduct(data);\n    //             // fetch related products\n    //             listRelated(data._id).then(data => {\n    //                 if (data.error) {\n    //                     setError(data.error);\n    //                 } else {\n    //                     setRelatedProduct(data);\n    //                 }\n    //             });\n    //         }\n    //     });\n    // };\n\n    // useEffect(() => {\n    //     const productId = props.match.params.productId;\n    //     loadSingleProduct(productId);\n    // }, [props]);\n\n    return (\n        <Layout\n            title={product && product.name}\n            description={product && product.description && product.description.substring(0, 100)}\n            className=\"container-fluid\"\n        >\n           \n        </Layout>\n    );\n};\n\nexport default Product;"]},"metadata":{},"sourceType":"module"}