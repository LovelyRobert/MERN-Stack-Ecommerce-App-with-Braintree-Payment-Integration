{"ast":null,"code":"var _jsxFileName = \"/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { getProducts } from './apiCore';\nimport Card from './Card'; //In react Componet file should start with UpperCase Letter\n\nconst Home = () => {\n  const [productsBySell, setProductsBySell] = useState([]);\n  const [productsByArrival, setProductsByArrival] = useState([]);\n  const [error, setError] = useState(false);\n\n  const loadProductsBySell = () => {\n    getProducts('sold').then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProductsBySell(data);\n      }\n    });\n  };\n\n  const loadProductsByArrival = () => {\n    getProducts('createdAt').then(data => {\n      console.log(data);\n\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProductsByArrival(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadProductsByArrival();\n    loadProductsBySell();\n  }, []);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"FullStack React Node MongoDB Ecommerce App\",\n    description: \"Node React E-commerce App\",\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, JSON.stringify(productsByArrival), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), JSON.stringify(productsBySell));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/swagath/Desktop/MERN Stack Ecommerce/MERN-Stack-Ecommerce-App-with-Braintree-Payment-Integration/ecommerce-front/src/core/Home.js"],"names":["React","useState","useEffect","Layout","getProducts","Card","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","error","setError","loadProductsBySell","then","data","loadProductsByArrival","console","log","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAGA;;AACA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMY,kBAAkB,GAAG,MAAM;AAC7BT,IAAAA,WAAW,CAAC,MAAD,CAAX,CAAoBU,IAApB,CAAyBC,IAAI,IAAI;AAC7B,UAAIA,IAAI,CAACJ,KAAT,EAAgB;AACZC,QAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACH,OAFD,MAEO;AACHH,QAAAA,iBAAiB,CAACO,IAAD,CAAjB;AACH;AACJ,KAND;AAOH,GARD;;AAUA,QAAMC,qBAAqB,GAAG,MAAM;AAChCZ,IAAAA,WAAW,CAAC,WAAD,CAAX,CAAyBU,IAAzB,CAA8BC,IAAI,IAAI;AAClCE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,UAAIA,IAAI,CAACJ,KAAT,EAAgB;AACZC,QAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACH,OAFD,MAEO;AACHD,QAAAA,oBAAoB,CAACK,IAAD,CAApB;AACH;AACJ,KAPD;AAQH,GATD;;AAWAb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,qBAAqB;AACrBH,IAAAA,kBAAkB;AACrB,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,4CADV;AAEI,IAAA,WAAW,EAAC,2BAFhB;AAGI,IAAA,SAAS,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKM,IAAI,CAACC,SAAL,CAAeX,iBAAf,CALL,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOKU,IAAI,CAACC,SAAL,CAAeb,cAAf,CAPL,CADJ;AAWH,CA1CD;;AA4CA,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { getProducts } from './apiCore';\nimport Card from './Card'\n\n\n//In react Componet file should start with UpperCase Letter\nconst Home = () => {\n    const [productsBySell, setProductsBySell] = useState([]);\n    const [productsByArrival, setProductsByArrival] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadProductsBySell = () => {\n        getProducts('sold').then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsBySell(data);\n            }\n        });\n    };\n\n    const loadProductsByArrival = () => {\n        getProducts('createdAt').then(data => {\n            console.log(data);\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsByArrival(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadProductsByArrival();\n        loadProductsBySell();\n    }, []);\n\n    return (\n        <Layout\n            title=\"FullStack React Node MongoDB Ecommerce App\"\n            description=\"Node React E-commerce App\"\n            className=\"container-fluid\"\n        >\n            {JSON.stringify(productsByArrival)}\n            <hr/>\n            {JSON.stringify(productsBySell)}\n        </Layout>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}